############################
###         Logs         ###
############################

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_cloudtrail*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:cloudtrail:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_cloudwatch*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:cloudwatch:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_cloudwatch_logs*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:cloudwatchlogs:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_config*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:config:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_configuration_tool*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:configtool:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_description*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:description:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_s3*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:s3:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_inspector*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:inspector:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_kinesis*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:kinesis:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_config_rule*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:configrule:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*splunk_ta_aws_logs*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:logs:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_sqs_based_s3*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:sqsbaseds3:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_billing*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:billing:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_sns*.log*]
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:sns:alert:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_sqs*.log*]
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:sqs:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*rest*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:resthandler:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*util.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:util:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)Splunk_TA_aws-RestEndpoints*.log*]
sourcetype = aws:restendpoints:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_proxy_conf*.log*]
sourcetype = aws:proxy-conf:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_s3util*.log*]
sourcetype = aws:s3util:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)regex_dimensions*.log*]
sourcetype = aws:regex-dimensions:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*Splunk_TA_aws_ta_util*.log*]
sourcetype=aws:ta-util:log
priority = 100

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_*.log*]
EXTRACT-traceback_and_error = (Traceback \(most recent call last\)):(?P<Traceback>[\S|\s]*\S(\r\n|\n|\r)(?P<ErrorCode>[^:]*):(?P<ErrorDetail>.*)$)

##################################
###         CloudTrail         ###
##################################

## Apply the following properties to sample text files by extension
[source::....aws_cloudtrail]
sourcetype = aws:cloudtrail

# Set sourcetype to aws:cloudtrail when ingesting data
[aws:cloudtrail]
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
TIME_PREFIX = \"eventTime\"\s*\:\s*\"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S%Z
MAX_TIMESTAMP_LOOKAHEAD = 28
KV_MODE = json

# Extraction
EVAL-action = case(eventName=="ConsoleLogin", lower('responseElements.ConsoleLogin'))
# AWS ARN Scheme
# arn:partition:service:region:account-id:resource
# arn:partition:service:region:account-id:resourcetype/resource
# arn:partition:service:region:account-id:resourcetype:resource
EVAL-userName = coalesce('userIdentity.userName', 'userIdentity.sessionContext.sessionIssuer.userName', if(isnull('userIdentity.arn'), mvindex(split(mvindex(split('requestParameters.roleArn',":"), -1), "/"), -1), mvindex(split(mvindex(split('userIdentity.arn',":"), -1), "/"), -1)))
EVAL-aws_account_id = if('userIdentity.type'="AWSAccount" OR 'userIdentity.type'="AWSService", recipientAccountId, 'userIdentity.accountId')
EVAL-errorCode = coalesce('errorCode',if(like('responseElements.ConsoleLogin',"Failure"),"failure", "success"),"success")
REPORT-user-for-aws-cloudtrail-acctmgmt = user-for-aws-cloudtrail-acctmgmt
REPORT-user-for-aws-cloudtrail-acctmgmt-2 = user-for-aws-cloudtrail-acctmgmt-2

# Aliases
FIELDALIAS-sourceIdentity.userName-for-aws-cloudtrail = sourceIdentity.userName AS user
FIELDALIAS-userIdentity.userName-for-aws-cloudtrail = userIdentity.userName AS user
FIELDALIAS-userIdentity.sessionContext.sessionIssuer.userName-for-aws-cloudtrail = userIdentity.sessionContext.sessionIssuer.userName AS user
FIELDALIAS-sourceIdentity.type-for-aws-cloudtrail = userIdentity.type AS user_type
FIELDALIAS-sourceIPAddress-for-aws-cloudtrail = sourceIPAddress AS src
FIELDALIAS-requestParameters-for-aws-cloudtrail = requestParameters AS desc
# FIELDALIAS-errorCode-for-aws-cloudtrail = errorCode AS msg
EVAL-msg = coalesce('errorCode',"success")
FIELDALIAS-eventTime-for-aws-cloudtrail = eventTime AS start_time
FIELDALIAS-accountId-for-aws-cloudtrail = userIdentity.accountId As user_group_id
FIELDALIAS-eventSource-for-aws-cloudtrail = eventSource AS dest
FIELDALIAS-eventSource-for-aws-cloudtrail_dvc = eventSource AS dvc
FIELDALIAS-src_user-for-aws-cloudtrail = userIdentity.userName AS src_user
FIELDALIAS-result-for-aws-cloudtrail = errorMessage AS result
FIELDALIAS-object = recipientAccountId AS object

# Lookups
LOOKUP-vendor-product-for-aws-cloudtrail = vendor-product-for-aws-cloudtrail sourcetype OUTPUTNEW vendor,product,app
LOOKUP-action-for-aws-cloudtrail-acctmgmt = aws-cloudtrail-acctmgmt eventName,errorCode OUTPUTNEW action,status
LOOKUP-changetype-for-aws-cloudtrail = change_type-for-aws-cloudtrail eventSource OUTPUTNEW change_type

# unify account ID field
FIELDALIAS-region-for-aws-cloudtrail = awsRegion AS region

##################################
###         CloudWatch         ###
##################################

[aws:cloudwatch]
# KV_MODE = multi_tsv_cloudwatch
KV_MODE = JSON
MAX_TIMESTAMP_LOOKAHEAD = 1

# Extract
EVAL-Average = case(Average=="", 0, Average!="", Average)
EVAL-Maximum = case(Average=="", 0, Average!="", Maximum)
EVAL-Minimum = case(Average=="", 0, Average!="", Minimum)

# Extraction
# EC2 Metrics
EVAL-cpu_load_percent = case(metric_name="CPUUtilization", Average)
EVAL-read_ops = case(metric_name="DiskReadOps" OR metric_name="VolumeReadOps" OR metric_name="ReadIOPS", Sum)
EVAL-write_ops = case(metric_name="DiskWriteOps" OR metric_name="VolumeWriteOps" OR metric_name="WriteIOPS", Sum)
EVAL-bytes_in = case(metric_name="NetworkIn", Sum)
EVAL-bytes_out = case(metric_name="NetworkOut", Sum)
EXTRACT-vm_id = InstanceId=\[(?<vm_id>i-\S+)\]
EVAL-network_usage_in = case(metric_name="NetworkIn", Sum)
EVAL-network_usage_out = case(metric_name="NetworkOut", Sum)
EVAL-network_packets_in = case(metric_name="NetworkPacketsIn", Sum)
EVAL-network_packets_out = case(metric_name="NetworkPacketsOut", Sum)
EVAL-storage_ops_read = case(metric_name="DiskReadOps" OR metric_name="VolumeReadOps" OR metric_name="ReadIOPS", Sum)
EVAL-storage_ops_write = case(metric_name="DiskWriteOps" OR metric_name="VolumeWriteOps" OR metric_name="WriteIOPS", Sum)
EVAL-storage_usage_read = case(metric_name="DiskReadBytes", Sum)
EVAL-storage_usage_write = case(metric_name="DiskWriteBytes", Sum)

# Database Metrics
EVAL-bytes_sessions = case(metric_name="DatabaseConnections", Sum)
EVAL-bytes_sga_free_memory = case(metric_name="FreeableMemory", Sum)
EVAL-bytes_mem_free = case(metric_name="FreeableMemory", Sum)
EVAL-bytes_storage_free = case(metric_name="FreeStorageSpace", Sum)
EVAL-bytes_swap_used = case(metric_name="SwapUsage", Sum)
EVAL-bytes_read_latency = case(metric_name="ReadLatency", Sum)
EVAL-bytes_write_latency = case(metric_name="WriteLatency", Sum)

# ELB Metrics
EVAL-rtt = case(metric_name="Latency", Average)
EVAL-5xx_codes = case(metric_name="HTTPCode_ELB_5XX", Sum)

# Aliases
# Lookups
LOOKUP-vendor-product-for-aws-cloudwatch = vendor-product-for-aws-cloudtrail sourcetype OUTPUTNEW vendor,product,app

# unify account ID field
FIELDALIAS-aws-account-id = account_id as aws_account_id
REPORT-extract-region = extract-region


##################################
###           Billing          ###
##################################
[aws:billing]
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 1

# extraction
EVAL-report_month = strftime(_time, "%Y-%m")
EVAL-LinkedAccount = if(isnull(LinkedAccountName), if(isnull(LinkedAccountId), "Unspecified", LinkedAccountId), LinkedAccountName+" (" +LinkedAccountId + ")")
EVAL-ProductName = if(isnull(ProductName), if(isnull(ProductCode), "Unspecified", ProductCode), ProductName)
EVAL-AvailabilityZone = if(isnull(AvailabilityZone), "Unspecified", AvailabilityZone)

#compatible with old data
EVAL-S3KeyLastModified=if(isnull(S3KeyLastModified),strftime(strptime(mvindex(split(replace(source,"(\d{2}):(\d{2}):(\d{2})","\1 \2 \3"),":"),-1),"%a, %d %b %Y %H %M %S GMT"),"%Y-%m-%dT%H:%M:%S.000Z"),S3KeyLastModified)

# unify account ID field
FIELDALIAS-aws-account-id = PayerAccountId as aws_account_id

##################################
###         AWS Config         ###
##################################

# Notifications/Diff Payloads
[aws:config:notification]
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
TIME_PREFIX = configurationItemCaptureTime"\s*:\s*"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
TZ = GMT
MAX_TIMESTAMP_LOOKAHEAD = 28
KV_MODE = json
ANNOTATE_PUNCT = false

FIELDALIAS-dest = configurationItem.resourceType AS dest
FIELDALIAS-object = configurationItem.resourceId AS object
FIELDALIAS-object_id = configurationItem.ARN AS object_id
EVAL-change_type = "configuration"
EVAL-dvc = "AWS Config"
EVAL-status="success"
LOOKUP-action= aws_config_action_lookup status AS configurationItem.configurationItemStatus OUTPUT action
LOOKUP-object_category = aws_config_object_category_lookup type AS configurationItem.resourceType OUTPUT object_category

# unify account ID field
FIELDALIAS-aws-account-id = configurationItem.awsAccountId as aws_account_id
FIELDALIAS-region-for-aws-config = configurationItem.awsRegion AS region

# Configuration History/Snapshots Payloads
[aws:config]
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
TIME_PREFIX = configurationItemCaptureTime"\s*:\s*"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
TZ = GMT
MAX_TIMESTAMP_LOOKAHEAD = 28
KV_MODE = json
ANNOTATE_PUNCT = false

FIELDALIAS-dest = resourceType AS dest
FIELDALIAS-object = resourceId AS object
FIELDALIAS-object_id = ARN AS object_id
EVAL-change_type = "configuration"
EVAL-dvc = "AWS Config"
EVAL-status="success"
LOOKUP-action= aws_config_action_lookup status AS configurationItemStatus OUTPUT action
LOOKUP-object_category = aws_config_object_category_lookup type AS resourceType OUTPUT object_category

# unify account ID field
FIELDALIAS-aws-account-id = awsAccountId as aws_account_id
FIELDALIAS-region-for-aws-config = awsRegion AS region


##################################
###      AWS Config Rule       ###
##################################

[aws:config:rule]
EVAL-enabled = if(ConfigRuleState="ACTIVE",1,0)
EXTRACT-account_id_and_region = (?P<account_id>\d+):(?P<region>[\w-]+) in source

FIELDALIAS-aws-account-id = account_id as aws_account_id
FIELDALIAS-config_rule_state_as_status = ConfigRuleState as status
FIELDALIAS-config_rule_name_as_name = ConfigRuleName as name
FIELDALIAS-description_as_description = Description as description
FIELDALIAS-account_id_as_user_id = account_id as user_id
FIELDALIAS-source_owner_as_src_user = Source.Owner as src_user
FIELDALIAS-config_rule_invoked_time_as_time = ConfigRuleInvokedTime as time
FIELDALIAS-first_activated_time_as_time = FirstActivatedTime as time


##################################
###      AWS Description       ###
##################################


[aws:description]
MAX_TIMESTAMP_LOOKAHEAD = 1
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
KV_MODE = json
ANNOTATE_PUNCT = false

# unify account ID field
EVAL-aws_account_id = if(isnull(owner_id),account_id,owner_id)

# Mapping for ITSI IaaS Module
EVAL-vm_id = case(match(source, ".+\:ec2_instances"), id)
EVAL-vendor = "AWS"
EVAL-vendor_product = case(match(source, "^.*:ec2_.*$"), "EC2")
EVAL-ip = case(match(source, ".+\:ec2_instances"), mvappend(if(ip_address="null",null(), ip_address), if(private_ip_address="null",null(), private_ip_address)))
LOOKUP-sizeToAttributes = sizeToAttributesLookup instance_type OUTPUT cpu_cores, mem_capacity
EVAL-storage_capacity = case(match(source, ".+\:ec2_volumes"), size * 1073741824)
EVAL-hypervisor_name = case(match(source, ".+\:ec2_instances"), hypervisor)
FIELDALIAS-vm_name = tags.Name as vm_name
EVAL-power_state = case(match(source, ".+\:ec2_instances"), state)
EVAL-vm_os = case(match(lower(platform),"^.*linux.*$"), "Linux", match(lower(platform),"^.*windows.*$"), "Windows", true(), "Unknown")
EVAL-account_id = if(isnull(owner_id), account_id, owner_id)
EVAL-region = if(isnotnull(region), region, substr(availability_zone,1,(len(availability_zone) - 1)))
FIELDALIAS-availabiity_zone = zone AS availability_zone
FIELDALIAS-vm_size = instance_type AS vm_size
EVAL-virtual_network_id = case(vpc_id!="null", vpc_id)
EVAL-virtual_subnet_id = case(subnet_id!="null", subnet_id)
EXTRACT-extract_ec2_custom_tag = \"tags\"\:\s*\{(?P<custom_tag_str>(?:\"[^\"\s]+\"\:\s*\"[^\"\s]+\"(?:,\s)?)*)
EVAL-custom_tag = split(custom_tag_str, ",")


##################################
###    AWS CloudWatch Logs     ###
##################################

[aws:cloudwatchlogs:vpcflow]
SHOULD_LINEMERGE = false
EXTRACT-all=^\s*(\d{4}-\d{2}-\d{2}.\d{2}:\d{2}:\d{2}[.\d\w]*)?\s*(?P<version>[^\s]+)\s+(?P<account_id>[^\s]+)\s+(?P<interface_id>[^\s]+)\s+(?P<src_ip>[^\s]+)\s+(?P<dest_ip>[^\s]+)\s+(?P<src_port>[^\s]+)\s+(?P<dest_port>[^\s]+)\s+(?P<protocol_code>[^\s]+)\s+(?P<packets>[^\s]+)\s+(?P<bytes>[^\s]+)\s+(?P<start_time>[^\s]+)\s+(?P<end_time>[^\s]+)\s+(?P<vpcflow_action>[^\s]+)\s+(?P<log_status>[^\s]+)

EVAL-duration=end_time-start_time
FIELDALIAS-src_ip_as_src = src_ip as src
FIELDALIAS-dest_ip_as_dest = dest_ip as dest

LOOKUP-protocol=vpcflow_protocol_code_lookup protocol_code OUTPUT protocol protocol_full_name
LOOKUP-action=vpcflow_action_lookup vpcflow_action OUTPUT action
REPORT-extract-region = extract-region


# unify account ID field
FIELDALIAS-aws-account-id = account_id as aws_account_id


##################################
###      AWS Inspector         ###
##################################
[aws:inspector]

EVAL-type = "event"
EXTRACT-account_id_and_region = (?P<account_id>\d+):(?P<region>[\w-]+) in source

FIELDALIAS-state_as_status = state as status
FIELDALIAS-created_at_as_time = createdAt as time
FIELDALIAS-service_as_app = service as app
FIELDALIAS-title_as_subject = title as subject
FIELDALIAS-account_id_as_user_id = account_id as user_id
FIELDALIAS-account_id_as_aws_account_id = account_id as aws_account_id


##################################
###         AWS S3             ###
##################################

[aws:s3]
SHOULD_LINEMERGE = false

## Classic Load Balancer ##
[source::...(/|\\)\d+_elasticloadbalancing_*.log]
EXTRACT-elb = ^\s*(?P<timestamp>[^\s]+)\s+(?P<elb>[^\s]+)\s+(?P<client_ip>[0-9.]+):(?P<client_port>\d+)\s+(?P<backend>[^\s]+)\s+(?P<request_processing_time>[^\s]+)\s+(?P<backend_processing_time>[^\s]+)\s+(?P<response_processing_time>[^\s]+)\s+(?P<elb_status_code>[\d-]+)\s+(?P<backend_status_code>[\d-]+)\s+(?P<received_bytes>\d+)\s+(?P<sent_bytes>\d+)\s+"(?P<request>.+)"\s+"(?P<user_agent>.+)"\s+(?P<ssl_cipher>[-\w]+)\s*(?P<ssl_protocol>[-\w\.]+)
EVAL-rtt = request_processing_time + backend_processing_time + response_processing_time

## Application Load Balancer ##
[source::...(/|\\)\d+_elasticloadbalancing_*.log.gz]
EXTRACT-elb = ^\s*(?P<type>[^\s]+)\s+(?P<timestamp>[^\s]+)\s+(?P<elb>[^\s]+)\s+(?P<client_ip>[0-9.]+):(?P<client_port>\d+)\s+(?P<target>[^\s]+)\s+(?P<request_processing_time>[^\s]+)\s+(?P<target_processing_time>[^\s]+)\s+(?P<response_processing_time>[^\s]+)\s+(?P<elb_status_code>[\d-]+)\s+(?P<target_status_code>[\d-]+)\s+(?P<received_bytes>\d+)\s+(?P<sent_bytes>\d+)\s+"(?P<request>.+)"\s+"(?P<user_agent>.+)"\s+(?P<ssl_cipher>[-\w]+)\s*(?P<ssl_protocol>[-\w\.]+)\s+(?P<target_group_arn>[^\s]+)\s+(?P<trace_id>[^\s]+)
EVAL-rtt = request_processing_time + target_processing_time + response_processing_time

[aws:s3:accesslogs]
EXTRACT-s3 = ^\s*(?P<bucket_owner>[^\s]+)\s+(?P<bucket_name>[^\s]+)\s+\[(?P<request_time>.+)\]\s+(?P<remote_ip>[^\s]+)\s+(?P<requester>[^\s]+)\s+(?P<request_id>[^\s]+)\s+(?P<operation>[^\s]+)\s+(?P<key>[^\s]+)\s+"(?P<request_uri>.+)"\s+(?P<http_status>[^\s]+)\s+(?P<error_code>[^\s]+)\s+(?P<bytes_sent>[^\s]+)\s+(?P<object_size>[^\s]+)\s+(?P<total_time>[^\s]+)\s+(?P<turn_around_time>[^\s]+)\s+"(?P<referrer>.+)"\s+"(?P<user_agent>.+)"\s+(?P<version_id>[-\w]+)$

[aws:cloudfront:accesslogs]

EXTRACT-cloudfront_web = ^\s*(?P<date>[0-9-]+)\s+(?P<time>[0-9:]+)\s+(?P<x_edge_location>[^\s]+)\s+(?P<sc_bytes>\d+)\s+(?P<c_ip>[0-9.]+)\s+(?P<cs_method>[^\s]+)\s+(?P<cs_host>[^\s]+)\s+(?P<cs_uri_stem>[^\s]+)\s+(?P<sc_status>\d+)\s+(?P<cs_referer>[^\s]+)\s+(?P<cs_user_agent>[^\s]+)\s+(?P<cs_uri_query>[^\s]+)\s+(?P<cs_cookie>[^\s]+)\s+(?P<x_edge_result_type>[^\s]+)\s+(?P<x_edge_request_id>[^\s]+)\s+(?P<x_host_header>[^\s]+)\s+(?P<cs_protocol>[^\s]+)\s+(?P<cs_bytes>[^\s]+)\s+(?P<time_taken>[0-9.]+)\s+(?P<x_forwarded_for>[^\s]+)\s+(?P<ssl_protocol>[^\s]+)\s+(?P<ssl_cipher>[^\s]+)\s+(?P<x_edge_response_result_type>[^\s]+)

EXTRACT-cloudfront_rtmp = ^\s*(?P<date>[0-9-]+)\s+(?P<time>[0-9:]+)\s+(?P<x_edge_location>[^\s]+)\s+(?P<c_ip>[0-9.]+)\s+(?P<x_event>[^\s]+)\s+(?P<sc_bytes>\d+)\s+(?P<x_cf_status>[^\s]+)\s+(?P<x_cf_client_id>[^\s]+)\s+(?P<cs_uri_stem>[^\s]+)\s+(?P<cs_uri_query>[^\s]+)\s+(?P<c_referrer>[^\s]+)\s+(?P<x_page_url>[^\s]+)\s+(?P<c_user_agent>[^\s]+)\s+(?P<x_sname>[^\s]+)\s+(?P<x_sname_query>[^\s]+)\s+(?P<x_file_ext>[^\s]+)\s+(?P<x_sid>[^\s]+)

FIELDALIAS-client_ip = c_ip as client_ip

EVAL-time_taken=time_taken*1000

# take twice due to AWS's bugfix.
# https://forums.aws.amazon.com/thread.jspa?threadID=134017
EVAL-cs_uri_stem=urldecode(urldecode(cs_uri_stem))

LOOKUP-x_edge_location=cloudfront_edge_location_lookup x_edge_location OUTPUT edge_location_name


###################################
###           AWS SQS           ###
###################################
[aws:sqs]
KV_MODE = json


########################################################
###  Forward Compatibility Support (Boto2 -> Boto3)  ###
########################################################
[source::*:ec2_reserved_instances]
FIELDALIAS-id_alias = ReservedInstancesId as id
FIELDALIAS-offering_type_alias = OfferingType as offering_type
FIELDALIAS-instance_count_alias = InstanceCount as instance_count
FIELDALIAS-availability_zone_alias = AvailabilityZone as availability_zone
FIELDALIAS-instance_type_alias = InstanceType as instance_type
FIELDALIAS-instance_tenancy_alias = InstanceTenancy as instance_tenancy
FIELDALIAS-state_alias = State as state
FIELDALIAS-fixed_price_alias = FixedPrice as fixed_price
FIELDALIAS-description_alias = ProductDescription as description
FIELDALIAS-usage_price_alias = UsagePrice as usage_price
FIELDALIAS-currency_code_alias = CurrencyCode as currency_code
FIELDALIAS-start_alias = Start as start
FIELDALIAS-end_alias = End as end
FIELDALIAS-duration_alias = Duration as duration
